-- MySQL Script generated by MySQL Workbench
-- Tue Jul 17 16:37:00 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gym
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gym
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gym` DEFAULT CHARACTER SET utf8 ;
USE `gym` ;

-- -----------------------------------------------------
-- Table `gym`.`FIT_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userName` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `givenName` VARCHAR(45) NOT NULL,
  `pwd` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `userName_UNIQUE` (`userName` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_userGroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_userGroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `clientGroup` VARCHAR(45) NULL,
  `strategy` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_userGroupMapping`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_userGroupMapping` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userGroupId` INT UNSIGNED NOT NULL,
  `userId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_FIT_userGroupMapping_FIT_userGroup_idx` (`userGroupId` ASC),
  INDEX `fk_FIT_userGroupMapping_FIT_user1_idx` (`userId` ASC),
  CONSTRAINT `fk_FIT_userGroupMapping_FIT_userGroup`
    FOREIGN KEY (`userGroupId`)
    REFERENCES `gym`.`FIT_userGroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FIT_userGroupMapping_FIT_user1`
    FOREIGN KEY (`userId`)
    REFERENCES `gym`.`FIT_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_muscleGroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_muscleGroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `groupName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_gymAction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_gymAction` (
  `id` INT NOT NULL,
  `muscleGroupId` INT NULL,
  `gymAction` VARCHAR(45) NULL,
  `level` ENUM('simple', 'medium', 'hard') NULL DEFAULT 'simple',
  `videoUrl` TEXT(500) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_FIT_gymAction_FIT_muscleGroup1_idx` (`muscleGroupId` ASC),
  CONSTRAINT `fk_FIT_gymAction_FIT_muscleGroup1`
    FOREIGN KEY (`muscleGroupId`)
    REFERENCES `gym`.`FIT_muscleGroup` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_plan` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `comment` TEXT(500) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_planDetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_planDetail` (
  `id` INT NOT NULL,
  `planId` INT NOT NULL,
  `actionId` INT NOT NULL,
  `sets` INT UNSIGNED NOT NULL DEFAULT 1,
  `turns` INT UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_FIT_planDetail_FIT_plan1_idx` (`planId` ASC),
  INDEX `fk_FIT_planDetail_FIT_gymAction1_idx` (`actionId` ASC),
  CONSTRAINT `fk_FIT_planDetail_FIT_plan1`
    FOREIGN KEY (`planId`)
    REFERENCES `gym`.`FIT_plan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FIT_planDetail_FIT_gymAction1`
    FOREIGN KEY (`actionId`)
    REFERENCES `gym`.`FIT_gymAction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_clientPlanMapping`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_clientPlanMapping` (
  `id` INT NOT NULL,
  `planId` INT NOT NULL,
  `clientId` INT NOT NULL,
  `coachId` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_FIT_clientPlanMapping_FIT_plan1_idx` (`planId` ASC),
  INDEX `fk_FIT_clientPlanMapping_FIT_user1_idx` (`clientId` ASC),
  INDEX `fk_FIT_clientPlanMapping_FIT_user2_idx` (`coachId` ASC),
  CONSTRAINT `fk_FIT_clientPlanMapping_FIT_plan1`
    FOREIGN KEY (`planId`)
    REFERENCES `gym`.`FIT_plan` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_FIT_clientPlanMapping_FIT_user1`
    FOREIGN KEY (`clientId`)
    REFERENCES `gym`.`FIT_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_FIT_clientPlanMapping_FIT_user2`
    FOREIGN KEY (`coachId`)
    REFERENCES `gym`.`FIT_user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gym`.`FIT_dailyCheck`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gym`.`FIT_dailyCheck` (
  `id` INT NOT NULL,
  `FIT_clientPlanMapping_id` INT NOT NULL,
  `totalWorkoutDays` INT NULL,
  `continuousDay` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_FIT_dailyCheck_FIT_clientPlanMapping1_idx` (`FIT_clientPlanMapping_id` ASC),
  CONSTRAINT `fk_FIT_dailyCheck_FIT_clientPlanMapping1`
    FOREIGN KEY (`FIT_clientPlanMapping_id`)
    REFERENCES `gym`.`FIT_clientPlanMapping` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
